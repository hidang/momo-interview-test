{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { NativeRouter, Route, useHistory } from \"react-router-native\";\nimport LoginScreen from \"../containers/Login/LoginScreen\";\nimport ListPhoto from \"../containers/Photos/ListPhoto\";\nimport * as Keychain from \"react-native-keychain\";\n\nvar AppRoute = function AppRoute() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setIsLoggedIn = _useState2[1];\n\n  var history = useHistory();\n  return React.createElement(NativeRouter, null, React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: LoginScreen\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/list-photo\",\n    component: ListPhoto\n  }));\n};\n\nexport default AppRoute;","map":{"version":3,"sources":["/Users/hidang/Desktop/momo-interview-project/src/app/routes/index.js"],"names":["React","useState","NativeRouter","Route","useHistory","LoginScreen","ListPhoto","Keychain","AppRoute","isLoggedIn","setIsLoggedIn","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,qBAAhD;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,kBAAoCP,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,OAAO,GAAGP,UAAU,EAA1B;AAiBA,SACE,oBAAC,YAAD,QACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC;AAAtC,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAEC;AAA3C,IAFF,CADF;AAMD,CAzBD;;AA2BA,eAAeE,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { NativeRouter, Route, useHistory } from \"react-router-native\";\nimport LoginScreen from \"../containers/Login/LoginScreen\";\nimport ListPhoto from \"../containers/Photos/ListPhoto\";\nimport * as Keychain from \"react-native-keychain\";\n\nconst AppRoute = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useHistory();\n\n  // React.useEffect(() => {\n  //   (async () => {\n  //     try {\n  //       const credentials = await Keychain.getGenericPassword();\n  //       if (credentials) {\n  //         setIsLoggedIn(true);\n  //         history.push(\"/\");\n  //       } else {\n  //       }\n  //     } catch (error) {\n  //       console.log(\"Keychain couldn't be accessed!\", error);\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <NativeRouter>\n      <Route exact path=\"/login\" component={LoginScreen} />\n      <Route exact path=\"/list-photo\" component={ListPhoto} />\n    </NativeRouter>\n  );\n};\n\nexport default AppRoute;\n"]},"metadata":{},"sourceType":"module"}