{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../shared/colors\";\nimport axios from \"axios\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLogin = function handleLogin() {\n    var account = {\n      email: \"eve.holt@dreqres.in\",\n      password: \"cityslicka\"\n    };\n    axios.post(\"https://reqres.in/api/login\", account).then(function (res) {\n      console.log(res.data.token);\n    }).catch(function (err) {\n      if (err.response) {\n        console.log(err.response.data.error);\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUsername,\n    value: username,\n    placeholder: \"Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    secureTextEntry: true,\n    placeholder: \"Password\"\n  })), React.createElement(View, {\n    style: styles.boxButtonLogin\n  }, React.createElement(Button, {\n    color: colors.white,\n    title: \"\\u0110\\u0103ng nh\\u1EADp\",\n    onPress: function onPress() {\n      return handleLogin();\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    height: \"100%\",\n    backgroundColor: colors.background\n  },\n  input: {\n    fontSize: 20,\n    width: 250,\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: colors.white\n  },\n  boxButtonLogin: {\n    width: \"100%\",\n    backgroundColor: colors.blue,\n    fontWeight: \"bold\",\n    position: \"absolute\",\n    bottom: 0,\n    alignSelf: \"flex-end\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/hidang/Desktop/momo-interview-project/src/screens/LoginScreen.js"],"names":["React","Component","useState","colors","axios","LoginScreen","username","setUsername","password","setPassword","handleLogin","account","email","post","then","res","console","log","data","token","catch","err","response","error","styles","container","input","boxButtonLogin","white","StyleSheet","create","display","alignItems","justifyContent","position","height","backgroundColor","background","fontSize","width","margin","borderWidth","padding","blue","fontWeight","bottom","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Alert, Button, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport colors from \"../shared/colors\";\nimport axios from \"axios\";\n\nconst LoginScreen = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    const account = {\n      email: \"eve.holt@dreqres.in\",\n      password: \"cityslicka\",\n    };\n\n    axios\n      .post(`https://reqres.in/api/login`, account)\n      .then((res) => {\n        console.log(res.data.token);\n      })\n      .catch((err) => {\n        if (err.response) {\n          // Alert.alert(err.err);\n          console.log(err.response.data.error);\n        }\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <TextInput\n          style={styles.input}\n          onChangeText={setUsername}\n          value={username}\n          placeholder=\"Username\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          secureTextEntry={true}\n          placeholder=\"Password\"\n        />\n      </View>\n      <View style={styles.boxButtonLogin}>\n        <Button\n          color={colors.white}\n          title=\"Đăng nhập\"\n          onPress={() => handleLogin()}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n\n    position: \"relative\",\n    height: \"100%\",\n    backgroundColor: colors.background,\n  },\n  input: {\n    fontSize: 20,\n    width: 250,\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: colors.white,\n  },\n  boxButtonLogin: {\n    width: \"100%\",\n\n    backgroundColor: colors.blue,\n    fontWeight: \"bold\",\n\n    position: \"absolute\",\n    bottom: 0,\n    alignSelf: \"flex-end\",\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}