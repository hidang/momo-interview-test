{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../../shared/colors\";\nimport { useHistory } from \"react-router-native\";\nimport * as Keychain from \"react-native-keychain\";\nimport axios from \"axios\";\nimport { LoginScreenStyles as styles } from \"./styles\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var history = useHistory();\n\n  var handleLogin = function handleLogin() {\n    setLoading(true);\n    var account = {\n      email: \"eve.holt@reqres.in\",\n      password: \"cityslicka\"\n    };\n    axios.post(\"https://reqres.in/api/login\", account).then(function _callee(res) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(res.data.token);\n              history.push(\"/list-photo\");\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      if (err.response) {\n        Alert.alert(err.response.data.error);\n      }\n    }).then(function () {\n      return setLoading(false);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, loading && React.createElement(View, {\n    style: styles.loading\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\"\n  })), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUsername,\n    value: username,\n    placeholder: \"Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    secureTextEntry: true,\n    placeholder: \"Password\"\n  })), React.createElement(View, {\n    style: styles.boxButtonLogin\n  }, React.createElement(Button, {\n    color: colors.white,\n    title: \"\\u0110\\u0103ng nh\\u1EADp\",\n    onPress: function onPress() {\n      return handleLogin();\n    }\n  })));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/hidang/Desktop/momo-interview-project/src/app/containers/Login/LoginScreen.js"],"names":["React","useState","colors","useHistory","Keychain","axios","LoginScreenStyles","styles","LoginScreen","username","setUsername","password","setPassword","loading","setLoading","history","handleLogin","account","email","post","then","res","console","log","data","token","push","catch","err","response","Alert","alert","error","container","input","boxButtonLogin","white"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAiB,IAAIC,MAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,kBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BX,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,MAAMa,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAMG,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE,oBADO;AAEdP,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAKAN,IAAAA,KAAK,CACFc,IADH,gCACuCF,OADvC,EAEGG,IAFH,CAEQ,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB;AACAV,cAAAA,OAAO,CAACW,IAAR,CAAa,aAAb;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFR,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AACd,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBC,QAAAA,KAAK,CAACC,KAAN,CAAYH,GAAG,CAACC,QAAJ,CAAaL,IAAb,CAAkBQ,KAA9B;AACD;AACF,KAVH,EAWGZ,IAXH,CAWQ;AAAA,aAAMN,UAAU,CAAC,KAAD,CAAhB;AAAA,KAXR;AAYD,GAnBD;;AAqBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAAC0B;AAApB,KACGpB,OAAO,IACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM;AAApB,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC;AAAxB,IADF,CAFJ,EAOE,oBAAC,IAAD,QACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAAC2B,KADhB;AAEE,IAAA,YAAY,EAAExB,WAFhB;AAGE,IAAA,KAAK,EAAED,QAHT;AAIE,IAAA,WAAW,EAAC;AAJd,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAAC2B,KADhB;AAEE,IAAA,YAAY,EAAEtB,WAFhB;AAGE,IAAA,KAAK,EAAED,QAHT;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,WAAW,EAAC;AALd,IAPF,CAPF,EAsBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAAC4B;AAApB,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEjC,MAAM,CAACkC,KADhB;AAEE,IAAA,KAAK,EAAC,0BAFR;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMpB,WAAW,EAAjB;AAAA;AAHX,IADF,CAtBF,CADF;AAgCD,CA3DD;;AA6DA,eAAeR,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Alert,\n  Button,\n  TextInput,\n  View,\n} from \"react-native\";\nimport colors from \"../../../shared/colors\";\nimport { useHistory } from \"react-router-native\";\nimport * as Keychain from \"react-native-keychain\";\nimport axios from \"axios\";\nimport { LoginScreenStyles as styles } from \"./styles\";\n\nconst LoginScreen = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleLogin = () => {\n    setLoading(true);\n    const account = {\n      email: \"eve.holt@reqres.in\",\n      password: \"cityslicka\",\n    };\n\n    axios\n      .post(`https://reqres.in/api/login`, account)\n      .then(async (res) => {\n        console.log(res.data.token);\n        history.push(\"/list-photo\");\n      })\n      .catch((err) => {\n        if (err.response) {\n          Alert.alert(err.response.data.error);\n        }\n      })\n      .then(() => setLoading(false));\n  };\n\n  return (\n    <View style={styles.container}>\n      {loading && (\n        <View style={styles.loading}>\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n\n      <View>\n        <TextInput\n          style={styles.input}\n          onChangeText={setUsername}\n          value={username}\n          placeholder=\"Username\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          secureTextEntry={true}\n          placeholder=\"Password\"\n        />\n      </View>\n      <View style={styles.boxButtonLogin}>\n        <Button\n          color={colors.white}\n          title=\"Đăng nhập\"\n          onPress={() => handleLogin()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}