{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../shared/colors\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, null, React.createElement(Text, null, \"Dangne dasd\")), React.createElement(Button, {\n        color: colors.white,\n        backgroundColor: colors.blue,\n        title: \"\\u0110\\u0103ng nh\\u1EADp\",\n        style: styles.buttonLogin,\n        onPress: function onPress() {\n          return Alert.alert(\"Sai mật khẩu\");\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: colors.background\n  },\n  buttonLogin: {\n    borderWidth: 1,\n    position: \"absolute\",\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["/Users/hidang/Desktop/momo-interview-project/src/screens/LoginScreen.js"],"names":["React","Component","colors","LoginScreen","styles","container","white","blue","buttonLogin","Alert","alert","StyleSheet","create","height","justifyContent","backgroundColor","background","borderWidth","position","bottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,MAAP;;IAEqBC,W;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,IAAD,QACE,oBAAC,IAAD,sBADF,CADF,EAIE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,QAAA,eAAe,EAAEJ,MAAM,CAACK,IAF1B;AAGE,QAAA,KAAK,EAAC,0BAHR;AAIE,QAAA,KAAK,EAAEH,MAAM,CAACI,WAJhB;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAACC,KAAN,CAAY,cAAZ,CAAN;AAAA;AALX,QAJF,CADF;AAcD;;;;EAhBsCT,S;;SAApBE,W;AAmBrB,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,eAAe,EAAEb,MAAM,CAACc;AAHf,GADoB;AAM/BR,EAAAA,WAAW,EAAE;AACXS,IAAAA,WAAW,EAAE,CADF;AAEXC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,MAAM,EAAE;AAHG;AANkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert, Button, StyleSheet, Text, View } from \"react-native\";\nimport colors from \"../shared/colors\";\n\nexport default class LoginScreen extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View>\n          <Text>Dangne dasd</Text>\n        </View>\n        <Button\n          color={colors.white}\n          backgroundColor={colors.blue}\n          title=\"Đăng nhập\"\n          style={styles.buttonLogin}\n          onPress={() => Alert.alert(\"Sai mật khẩu\")}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: colors.background,\n  },\n  buttonLogin: {\n    borderWidth: 1,\n    position: \"absolute\",\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}