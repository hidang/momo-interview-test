{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../../shared/colors\";\nimport { useHistory } from \"react-router-native\";\nimport axios from \"axios\";\nimport { LoginScreenStyles as styles } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../../store/user/selectors\";\nimport { login } from \"../../../store/user/actions\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var history = useHistory();\n  var dispatch = useDispatch();\n\n  var handleLogin = function handleLogin() {\n    setLoading(true);\n    var account = {\n      email: \"eve.holt@reqres.in\",\n      password: \"cityslicka\"\n    };\n    axios.post(\"https://reqres.in/api/login\", account).then(function (res) {\n      console.log(res.data.token);\n      var payload = {\n        accessToken: res.data.token\n      };\n      dispatch(login(payload));\n    }).catch(function (err) {\n      if (err.response) {\n        Alert.alert(err.response.data.error);\n      }\n    }).then(function () {\n      setLoading(false);\n      history.push(\"/\");\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, loading && React.createElement(View, {\n    style: styles.loading\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\"\n  })), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUsername,\n    value: username,\n    placeholder: \"Username\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    secureTextEntry: true,\n    placeholder: \"Password\"\n  })), React.createElement(View, {\n    style: styles.boxButtonLogin\n  }, React.createElement(Button, {\n    color: colors.white,\n    title: \"\\u0110\\u0103ng nh\\u1EADp\",\n    onPress: function onPress() {\n      return handleLogin();\n    }\n  })));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/hidang/Desktop/momo-interview-project/src/app/containers/Login/LoginScreen.js"],"names":["React","useEffect","useState","colors","useHistory","axios","LoginScreenStyles","styles","useDispatch","useSelector","selectUser","login","LoginScreen","username","setUsername","password","setPassword","loading","setLoading","history","dispatch","handleLogin","account","email","post","then","res","console","log","data","token","payload","accessToken","catch","err","response","Alert","alert","error","push","container","input","boxButtonLogin","white"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Alert,\n  Button,\n  TextInput,\n  View,\n} from \"react-native\";\nimport colors from \"../../../shared/colors\";\nimport { useHistory } from \"react-router-native\";\nimport axios from \"axios\";\nimport { LoginScreenStyles as styles } from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../../store/user/selectors\";\nimport { login } from \"../../../store/user/actions\";\n\nconst LoginScreen = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleLogin = () => {\n    setLoading(true);\n    const account = {\n      email: \"eve.holt@reqres.in\",\n      password: \"cityslicka\",\n    };\n\n    axios\n      .post(`https://reqres.in/api/login`, account)\n      .then((res) => {\n        console.log(res.data.token);\n        const payload = {\n          accessToken: res.data.token,\n        };\n        dispatch(login(payload));\n      })\n      .catch((err) => {\n        if (err.response) {\n          Alert.alert(err.response.data.error);\n        }\n      })\n      .then(() => {\n        setLoading(false);\n        history.push(\"/\");\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      {loading && (\n        <View style={styles.loading}>\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n\n      <View>\n        <TextInput\n          style={styles.input}\n          onChangeText={setUsername}\n          value={username}\n          placeholder=\"Username\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          secureTextEntry={true}\n          placeholder=\"Password\"\n        />\n      </View>\n      <View style={styles.boxButtonLogin}>\n        <Button\n          color={colors.white}\n          title=\"Đăng nhập\"\n          onPress={() => handleLogin()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}